### ------------------------------------------------------------
### Basis-Variablen (lokal anpassen, falls nötig)
### ------------------------------------------------------------
@base = http://127.0.0.1:3000
@email = demo@example.com
@password = secret123

### Optional: alles zurücksetzen (löscht gespeicherte Variablen im REST Client)
# @name reset_env
GET {{base}}/health
> {% client.global.clear(); %}

### ------------------------------------------------------------
### Healthcheck
### ------------------------------------------------------------
# @name health
GET {{base}}/health

### ------------------------------------------------------------
### (Optional) Registrieren
### Wenn der User existiert, bekommst du 409. Ist okay.
### ------------------------------------------------------------
# @name register
POST {{base}}/api/register
Content-Type: application/json

{
  "email": "{{email}}",
  "password": "{{password}}"
}

### ------------------------------------------------------------
### Login -> speichert {{token}} für nachfolgende Requests
### ------------------------------------------------------------
# @name login
POST {{base}}/api/login
Content-Type: application/json

{
  "email": "{{email}}",
  "password": "{{password}}"
}

> {% client.global.set("token", response.body.token); %}

### Prüfen, dass token sitzt
# @name whoami
GET {{base}}/api/me
Authorization: Bearer {{token}}

### ------------------------------------------------------------
### Projekte
### ------------------------------------------------------------

### Neues Projekt anlegen -> speichert {{projectId}}
# @name create_project
POST {{base}}/api/projects
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Demo Project",
  "description": "erstellt via api.http"
}

> {% client.global.set("projectId", response.body.id); %}

### Alle meine Projekte
# @name list_projects
GET {{base}}/api/projects
Authorization: Bearer {{token}}

### Einzelnes Projekt mit Relationen (posts, accounts)
# @name get_project
GET {{base}}/api/projects/{{projectId}}
Authorization: Bearer {{token}}

### Projekt löschen (nur wenn leer oder Server löscht Kinder automatisch)
# @name delete_project
DELETE {{base}}/api/projects/{{projectId}}
Authorization: Bearer {{token}}

### ------------------------------------------------------------
### Social Accounts
### ------------------------------------------------------------

### Account hinzufügen -> speichert {{accountId}}
# @name add_account
POST {{base}}/api/projects/{{projectId}}/accounts
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "platform": "INSTAGRAM",   // erlaubt laut Schema
  "handle": "@curltest"
}

> {% client.global.set("accountId", response.body.id); %}

### Accounts des Projekts auflisten
# @name list_accounts
GET {{base}}/api/projects/{{projectId}}/accounts
Authorization: Bearer {{token}}

### Account löschen
# @name delete_account
DELETE {{base}}/api/projects/{{projectId}}/accounts/{{accountId}}
Authorization: Bearer {{token}}

### ------------------------------------------------------------
### Posts
### ------------------------------------------------------------

### Post anlegen -> speichert {{postId}}
# @name create_post
POST {{base}}/api/projects/{{projectId}}/posts
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "caption": "hello from api.http ✨",
  "status": "DRAFT",
  "accountIds": [ {{accountId}} ]
}

> {% client.global.set("postId", response.body.id); %}

### Posts des Projekts
# @name list_posts
GET {{base}}/api/projects/{{projectId}}/posts
Authorization: Bearer {{token}}

### Post updaten
# @name update_post
PATCH {{base}}/api/projects/{{projectId}}/posts/{{postId}}
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "caption": "updated ✍️",
  "status": "DRAFT"
}

### Post löschen
# @name delete_post
DELETE {{base}}/api/projects/{{projectId}}/posts/{{postId}}
Authorization: Bearer {{token}}

### ------------------------------------------------------------
### Schneller End-to-End Mini-Flow (wenn du alles hintereinander testen willst)
### 1) health → 2) login → 3) create_project → 4) add_account → 5) create_post
### 6) list_project/list_posts → 7) delete_post → 8) delete_account → 9) delete_project
### ------------------------------------------------------------
