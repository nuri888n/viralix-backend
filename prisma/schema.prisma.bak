// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./prisma/dev.db"
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String?
  username  String?   @unique
  password  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  projects  Project[]
}

model Project {
  id        Int       @id @default(autoincrement())
  userId    Int
  name      String
  description String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  user      User      @relation(fields: [userId], references: [id])
  accounts  SocialAccount[]
  posts     Post[]

  @@index([userId])
}

model SocialAccount {
  id        Int      @id @default(autoincrement())
  projectId Int
  platform  Platform
  handle    String
  createdAt DateTime @default(now())

  project   Project  @relation(fields: [projectId], references: [id])

  @@index([projectId])
}

model Post {
  id          Int       @id @default(autoincrement())
  projectId   Int
  caption     String
  mediaUrl    String?
  scheduledAt DateTime?
  status      PostStatus @default(DRAFT)
  publishedAt DateTime?
  // JSON-Liste der verknüpften Account-IDs (vereinfachtes Mapping)
    // JSON-Liste der verknüpften Account-IDs (vereinfachtes Mapping)
  accountIds Json @default(json("[]"))
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  project     Project   @relation(fields: [projectId], references: [id])

  @@index([projectId])
  @@index([status, scheduledAt])
}

enum Platform {
  INSTAGRAM
  TIKTOK
  YOUTUBE
  TWITTER
}

enum PostStatus {
  DRAFT
  SCHEDULED
  PUBLISHED
}